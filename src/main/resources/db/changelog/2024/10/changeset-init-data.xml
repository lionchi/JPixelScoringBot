<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">

    <changeSet id="create data 03.10.2024" author="Ivan Gavrilov" dbms="postgresql">
        <sql>
            insert into difficulty_levels(code, description)
            values ('junior', 'Младший специалист'),
                   ('middle', 'Старший специалист'),
                   ('senior', 'Ведущий специалист'),
                   ('technical_leader', 'Технический лидер'),
                   ('architect', 'Архитектор');

            insert into question_types(code, description)
            values ('Java', 'Вопросы связанные с ЯП Java и все что вокруг нее'),
                   ('Frontend', 'Вопросы связанные с языками программирования для разработки UI и все что вокруг них'),
                   ('Analytics', 'Вопросы связанные с аналитикой и все что вокруг нее');

            insert into questions(question, question_number, question_type_code, image_minio_path, timer_in_seconds,
                                  difficulty_level_code)
            values ('Что такое ОПП?', 1,
                    'Java', null, 30, 'junior'),
                   ('Чем отличается абстракция от интерфейса в ***ООП***?', 2,
                    'Java', null, 30, 'junior'),
                   ('Что относится к паттернам поведения?', 3,
                    'Java', null, 45, 'junior'),
                   ('Какой контракт между ***equals*** и ***hashCode***?', 4,
                    'Java', null, 45, 'junior'),
                   ('Какой будет результат выполнения кода на картинке нижне?', 5,
                    'Java', 'image/PictureQuestionAboutLong.png', 45, 'junior'),
                   ('В аббревиатуре ***SOLID***, что означают буквы ***O и D***?', 6,
                    'Java', null, 45, 'middle'),
                   ('Чего мы достигаем, если применять набор требований ***ACID***?', 7,
                    'Java', null, 45, 'middle'),
                   ('Что предотвращает уровень изоляции ***Read committed***?', 8,
                    'Java', null, 45, 'middle'),
                   ('Каким будет поведение выполнения кода на картинке нижне?', 9,
                    'Java', 'image/PictureQuestionAboutStreamApi.png', 60, 'middle'),
                   ('Что такое идемпотентность?', 10,
                    'Java', null, 45, 'middle'),
                   ('Какая из операций на изображении ниже является терминальной?', 11,
                    'Java', 'image/PictureQuestionAboutTermOperation.png', 60, 'middle'),
                   ('Что поставляется в пакете ***org.springframework.stereotype***?', 12,
                    'Java', null, 45, 'middle'),
                   ('Какая сложность будет у бинарного дерева в худшем случаи при удалении?', 13,
                    'Java', null, 60, 'senior'),
                   ('Какая сложность будет у красно-черного дерева в худшем случаи при удалении?', 14,
                    'Java', null, 60, 'senior'),
                   ('С помощью какого механизма в ***Spring framework*** можно изменить bean наполнив его дополнительной логикой?', 15,
                    'Java', null, 45, 'senior'),
                   ('Сколько транзакций будет открытой при выполнении следующего кода?', 16,
                    'Java', 'image/PictureQuestionAboutTransactional.png', 60, 'senior'),
                   ('Что гарантирует модификатор ***volatile***?', 17,
                    'Java', null, 45, 'middle'),
                   ('Какая строка будет выведена после исполнения следующего кода?', 18,
                    'Java', 'image/PictureQuestionAboutInitClass.png', 60, 'senior'),
                   ('С помощью каких из перечисленных способов можно создавать потоки в ***Java***?', 19,
                    'Java', null, 45, 'middle'),
                   ('Какой из решений на изображении нижне наиболее оптимальное?', 20,
                    'Java', 'image/PictureQuestionAboutBetterSolution.png', 120, 'senior'),
                   ('В каком порядке отработают потоки при выполнении кода на изображении ниже?', 21,
                    'Java', 'image/PictureQuestionAboutOrderThread.png', 45, 'middle');


            insert into answers(answer, answer_number, question_id, "right")
            values ('Методология программирования, которая представляет программное обеспечение в виде набора функций',
                    1, 1, false),
                   ('Методология программирования, которая представляет программное обеспечение в виде набора объектов',
                    2, 1, true),
                   ('Методология программирования, которая представляет программное обеспечение в виде набора последовательных инструкций',
                    3, 1, false),
                   ('Такого понятия нет', 4, 1, false),
                   ('Абстракция имеет состояние и поведение, а интерфейс только состояние', 1, 2, false),
                   ('Абстракция имеет поведение, а интерфейс поведение и состояние', 2, 2, false),
                   ('Абстракция имеет состояние и поведение, а интерфейс только поведение', 3, 2, true),
                   ('Абстракция и интерфейс имеют только поведение', 4, 2, false),
                   ('Iterator, Strategy, Chain of Responsibility, Visitor', 1, 3, true),
                   ('Prototype, Singleton, Builder, Factory Method', 2, 3, false),
                   ('Proxy, Bridge, Adapter, Decorator', 3, 3, false),
                   ('Если объекты равны по ***equals***, то их ***hashCode*** необязательно должны быть равны, но если объекты не равны по ***equals***, то их ***hashCode*** могут быть равны',
                    1, 4, false),
                   ('Если объекты равны по ***equals***, то их ***hashCode*** обязательно будут равны, но если объекты не равны по equals, то их ***hashCode*** могут быть равны',
                    2, 4, true),
                   ('Если объекты равны по ***equals***, то их ***hashCode*** необязательно должны быть равны, но если объекты не равны по ***equals***, то их ***hashCode*** не будут равны',
                    3, 4, false),
                   ('false, false', 1, 5, false),
                   ('true, true', 2, 5, false),
                   ('true, false', 3, 5, true),
                   ('false, true', 4, 5, false),
                   ('***O*** - принцип единственной ответственности, ***D*** - принцип разделения интерфейса', 1, 6, false),
                   ('***O*** - принцип единственной ответственности, ***D*** - принцип подстановки Барбары Лисков', 2, 6, false),
                   ('***O*** - принцип инверсии зависимостей, ***D*** - принцип открытости/закрытости', 3, 6, false),
                   ('***O*** - принцип открытости/закрытости, ***D*** - принцип инверсии зависимостей', 4, 6, true),
                   ('Атомарность, согласованность, изоляцию, устойчивость', 1, 7, true),
                   ('Масштабируемость, согласованность, производительность, устойчивость', 2, 7, false),
                   ('Атомарность, масштабируемость, изоляцию, производительность', 3, 7, false),
                   ('Такого набора требований не существует', 4, 7, false),
                   ('Фантомное чтение, Неповторяющееся чтение, Грязное чтение, Потерянное обновление', 1, 8, false),
                   ('Неповторяющееся чтение, Грязное чтение, Потерянное обновление', 2, 8, false),
                   ('Фантомное чтение, Грязное чтение', 3, 8, false),
                   ('Грязное чтение, Потерянное обновление', 4, 8, true),
                   ('Получим ***ConcurrentModificationException*** сразу после добавления элемента', 1, 9, false),
                   ('Получим ***ConcurrentModificationException*** после третьей итерации', 2, 9, true),
                   ('Получим ***ConcurrentModificationException*** после первой итерации', 3, 9, false),
                   ('Код успешно отработает', 4, 9, false),
                   ('Когда клиенты делают один и тот же вызов неоднократно при разных результатах на стороне сервер', 1, 10, false),
                   ('Когда вызов со стороны клиента не изменяет состояние сервера', 2, 10, false),
                   ('Когда клиенты делают один и тот же вызов неоднократно при одном и том же результате на стороне сервер', 3, 10, true),
                   ('Когда вызов клиента кэшируется на стороне сервера', 4, 10, false),
                   ('reduce', 1, 11, true),
                   ('map', 2, 11, false),
                   ('filter', 3, 11, false),
                   ('distinct', 4, 11, false),
                   ('peek', 5, 11, false),
                   ('@Bean, @Configuration, @Import, @Lazy', 1, 12, false),
                   ('@Primary, @Profile, @Scope, @Qualifier', 2, 12, false),
                   ('@EventListener, @SpringBootApplication, @EnableCaching, @EnableAutoConfiguration', 3, 12, false),
                   ('@Component, @Controller, @Service, @Repository', 4, 12, true),
                   ('O(1)', 1, 13, false),
                   ('O(n)', 2, 13, true),
                   ('O(log(n))', 3, 13, false),
                   ('O(n log(n))', 4, 13, false),
                   ('O(n)', 1, 14, false),
                   ('O(n log(n))', 2, 14, false),
                   ('O(log(n))', 3, 14, true),
                   ('O(1)', 4, 14, false),
                   ('Реализовать интерфейс ***BeanDefinition***', 1, 15, false),
                   ('Реализовать интерфейс ***BeanPostProcessor***', 2, 15, true),
                   ('Реализовать интерфейс ***NameBeanAware***', 3, 15, false),
                   ('Реализовать интерфейс ***BeanFactoryPostProcessors***', 4, 15, false),
                   ('0', 1, 16, false),
                   ('2', 2, 16, true),
                   ('1', 3, 16, false),
                   ('Будет ошибка при компиляции', 4, 16, false),
                   ('Будет ошибки во время выполнения', 5, 16, false),
                   ('Гарантирует безопасное чтение и запись переменной в многопоточной среде', 1, 17, true),
                   ('Гарантирует только безопасное чтение переменной в многопоточной среде', 2, 17, false),
                   ('Гарантирует только безопасное изменение переменной в многопоточной среде', 3, 17, false),
                   ('Гарантирует безопасное чтение, запись и изменение переменной в многопоточной среде', 4, 17, false),
                   ('bhtaed', 1, 18, false),
                   ('btache', 2, 18, false),
                   ('bthade', 3, 18, false),
                   ('bathde', 4, 18, true),
                   ('extends Thread, implement Runnable, implement Callable', 1, 19, false),
                   ('CompletableFuture', 2, 19, false),
                   ('Executors, new ThreadPoolExecutor, new ScheduledThreadPoolExecutor', 3, 19, false),
                   ('Всеми из перечисленных способов', 4, 19, true),
                   ('solution1', 1, 20, true),
                   ('solution2', 2, 20, false),
                   ('solution3', 3, 20, false),
                   ('main -> t1 -> t2', 1, 21, false),
                   ('t1 -> t2 -> main', 2, 21, true),
                   ('t2 -> t1 -> main', 3, 21, false),
                   ('Порядок при каждом запуске может быть всегда разный', 4, 12, false);
        </sql>
        <rollback>
            truncate difficulty_levels;
            truncate questions;
            truncate answers;
        </rollback>
        <comment>
            Init date
        </comment>
    </changeSet>
</databaseChangeLog>
